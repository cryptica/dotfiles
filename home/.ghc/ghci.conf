-- imports
import Control.Applicative
import Control.Arrow
import Control.Monad
import Control.Concurrent
import Control.Parallel

import Data.String
import Data.Char
import Data.List
import Data.Monoid

-- tool access
let escape arg = "'" ++ ((\c -> if c == '\'' then "'\"'\"'" else [c]) =<< arg) ++ "'"
:def hoogle return . (":! hoogle --count=15 " ++) . escape
:def pl return . (":! pointfree " ++) . escape

--set prompt to lambda
:set prompt "Î»> "
